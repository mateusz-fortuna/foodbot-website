{"version":3,"sources":["assets/images/food-printer-w-background.jpg","components/Intro/index.js","components/Transition/index.js","components/Home/index.js","components/About/index.js","components/Gallery/index.js","components/Contact/index.js","components/Blog/index.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Index","props","state","style","introTitle","fontSize","Math","floor","clientWidth","introSubtitle","Row","className","Col","CSSTransition","in","showIntro","timeout","classNames","appear","Transition","items","i","push","mountTransition","unmountOnExit","key","xs","transitionDelay","Home","descriptionFontSize","linkFontSize","homeImage","backgroundImage","PrinterImage","homeTitle","homeDescription","link","useState","setMountTransition","handleLearnMore","setTimeout","window","location","href","handleScroll","event","deltaY","useEffect","addEventListener","removeEventListener","lg","onClick","preventDefault","Button","type","variant","About","Gallery","Contact","Blog","App","menuIsOpen","setMenuIsOpen","menuButtonIsClicked","setMenuButtonIsClicked","menuLinesBackground","handleMenuButtonClick","setShowIntro","mountIntro","setMountIntro","innerWidth","width","setWidth","updateWidth","menuLines","backgroundColor","menuLink","menuLabel","color","basename","Container","fluid","enter","exit","to","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2937eb3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/food-printer-w-background.f00a6669.jpg\";","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './index.sass';\r\n\r\nconst Index = props => {\r\n  const state = {\r\n    style: {\r\n      introTitle: {\r\n        fontSize: Math.floor( 0.08 * props.clientWidth )\r\n      },\r\n      introSubtitle: {\r\n        fontSize: Math.floor( 0.03 * props.clientWidth )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Col className=\"h-100 p-0\">\r\n        <div className=\"intro d-flex justify-content-center align-items-center\">\r\n          <div className=\"stripContainer\">\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1000 }\r\n              classNames=\"stripOne\"\r\n            >\r\n              <div className=\"strip stripOne\" />\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1200 }\r\n              classNames=\"stripTwo\"\r\n            >\r\n              <div className=\"strip stripTwo\" />\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1300 }\r\n              classNames=\"stripThree\"\r\n            >\r\n              <div className=\"strip stripThree\" />\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1400 }\r\n              classNames=\"stripFour\"\r\n            >\r\n              <div className=\"strip stripFour\" />\r\n            </CSSTransition>\r\n          </div>\r\n          <div className=\"introTextWrapper text-center\">\r\n            <div className=\"introTitleWrapper\">\r\n              <CSSTransition\r\n                in={ props.showIntro }\r\n                timeout={ 1000 }\r\n                classNames=\"introTitle\"\r\n                appear={ true }\r\n              >\r\n                <h1 className=\"introTitle\" style={ state.style.introTitle }>FoodBot</h1>\r\n              </CSSTransition>\r\n            </div>\r\n            <div className=\"introSubtitleWrapper\">\r\n            <CSSTransition\r\n                in={ props.showIntro }\r\n                timeout={ 2000 }\r\n                classNames=\"introSubtitle\"\r\n                appear={ true }\r\n              >\r\n                <p className=\"introSubtitle\" style={ state.style.introSubtitle }>Create your own dream dessert</p>  \r\n              </CSSTransition>\r\n            </div> \r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Index;","import React from 'react';\r\nimport './index.sass';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\nconst timeout = 1000; //single strip transition time\r\nconst delay = 100;\r\n\r\n\r\n\r\nconst Transition = props => {\r\n  const items = [];\r\n    \r\n  for ( let i = 0; i < 4; i++ ) {\r\n    items.push (\r\n      <CSSTransition\r\n        in={ props.mountTransition }\r\n        appear={ true }\r\n        unmountOnExit={ true }\r\n        timeout={ timeout + ( i * delay ) }\r\n        classNames=\"transition__strip\"\r\n        key={ i }\r\n      >\r\n        <Col\r\n          xs=\"3\"\r\n          className=\"transition__strip\"\r\n          style={ { transitionDelay: i * delay +'ms' } }\r\n        />\r\n      </CSSTransition>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Row className=\"transition\">\r\n      { items }\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Transition;","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport './index.sass';\r\nimport PrinterImage from '../../assets/images/food-printer-w-background.jpg';\r\nimport Transition from '../Transition';\r\n\r\n\r\nconst Home = props => {\r\n\r\n  //----------STATE STYLES----------//\r\n\r\n  const descriptionFontSize = ( props.clientWidth >= 1200 )\r\n    ? Math.floor( 0.018 * props.clientWidth )\r\n    : null;\r\n\r\n  const linkFontSize = ( props.clientWidth >= 1200 )\r\n    ? Math.floor( 0.018 * props.clientWidth * 0.72 )\r\n    : null;\r\n\r\n  const state = {\r\n    style: {\r\n      homeImage: {\r\n        backgroundImage: `url( ${ PrinterImage } )`\r\n      },\r\n      homeTitle: {\r\n        fontSize: Math.floor( 0.08 * props.clientWidth )\r\n      },\r\n      homeDescription: {\r\n        fontSize: descriptionFontSize\r\n      },\r\n      link: {\r\n        fontSize: linkFontSize\r\n      }\r\n    }\r\n  }\r\n\r\n//----------MOUNT TRANSITION HANDLER----------//\r\n\r\n const [ mountTransition, setMountTransition ] = useState( false );\r\n\r\n //----------LEARN MORE HANDLER----------//\r\n \r\n const handleLearnMore = () => {\r\n   setMountTransition( !mountTransition );\r\n   setTimeout( () => { window.location.href = '/#/about'; }, 1300 );\r\n };\r\n \r\n //----------MOUNT ABOUT ON SCROLL----------//\r\n \r\n const handleScroll = event => {\r\n   if ( event.deltaY > 1 ) {\r\n     handleLearnMore();\r\n   }\r\n };\r\n \r\n useEffect( () => {\r\n  window.addEventListener( 'wheel', event => { handleScroll( event ); }, false );\r\n  window.addEventListener( 'touchmove', event => { handleScroll( event ); }, false );\r\n\r\n  return () => {\r\n    window.removeEventListener( 'wheel', event => { handleScroll( event ); }, false );\r\n    window.addEventListener( 'touchmove', event => { handleScroll( event ); }, false );\r\n  };\r\n} );\r\n\r\n\r\n\r\n  //----------JSX CODE----------//\r\n\r\n  return (\r\n    <Row className=\"home\">\r\n    { mountTransition && ( <Transition mountTransition={ mountTransition } /> ) }\r\n\r\n      {/* ----------PRINTER COLUMN--------- */}\r\n\r\n\r\n      <Col lg=\"6\" className=\"homeImageWrapper p-0\">\r\n        <div className=\"homeImage\" style={ state.style.homeImage }/>\r\n      </Col>\r\n\r\n\r\n      {/* ----------CONTENT COLUMN---------- */}\r\n\r\n\r\n      <Col lg=\"6\" className=\"homeContent p-0\">\r\n\r\n        {/* ----------THIN LINES---------- */}\r\n\r\n        <div className=\"linesContainer\">\r\n          <div className=\"verticalLine\" />\r\n          <div className=\"horizontalLine\" />\r\n        </div>\r\n\r\n        {/* ----------CONTENT TEXT---------- */}\r\n\r\n        <div className=\"homeDescription\" style={ state.style.homeDescription }>\r\n          <span className=\"d-block\">FoodBot 3D printer</span>\r\n          <span className=\"d-block\">is an equipment which</span>\r\n          <span className=\"d-block\">can make food quickly.</span>\r\n          <span className=\"d-block\">It allow you to create</span>\r\n          <span className=\"d-block\">your own dream dessert.</span>\r\n          <br />\r\n\r\n          <a\r\n            className=\"learnMore\"\r\n            href=\"/about\"\r\n            onClick={ event => { event.preventDefault(); } }\r\n          >\r\n            { props.clientWidth < 1200 && (\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline-dark\"\r\n                  className=\"learnMoreButton link\"\r\n                  style={ state.style.link }\r\n                  onClick={ handleLearnMore }\r\n                >Learn more</Button>\r\n              )\r\n            }\r\n            {\r\n              props.clientWidth >= 1200 && (\r\n                <div>\r\n                  <p\r\n                    className=\"link\"\r\n                    style={ state.style.link }\r\n                    onClick={ handleLearnMore }\r\n                  >Learn more</p>\r\n                  <span className=\"underline\" />\r\n                </div>  \r\n              )\r\n            }\r\n          </a> \r\n        </div>\r\n    \r\n        <h1 className=\"homeTitle\" style={ state.style.homeTitle }>FoodBot</h1>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      About\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div>\r\n      Gallery\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      Contact\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nconst Blog = () => {\r\n  return (\r\n    <div>\r\n      Blog\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;","import React, { useState, useEffect } from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.sass';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Intro from './Intro';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport Gallery from './Gallery';\r\nimport Contact from './Contact';\r\nimport Blog from './Blog';\r\n\r\n\r\nconst App = () => {\r\n\r\n  //----------MENU BUTTON HANDLER----------//\r\n  const [ menuIsOpen, setMenuIsOpen ] = useState( false );\r\n  const [ menuButtonIsClicked, setMenuButtonIsClicked ] = useState( false );\r\n  const menuLinesBackground = menuButtonIsClicked ? '#e0e0e0' : null;\r\n\r\n  const handleMenuButtonClick = () => {\r\n    setMenuButtonIsClicked( !menuButtonIsClicked );\r\n    setMenuIsOpen( true )\r\n  };\r\n\r\n  //----------INTRO HANDLERS----------//\r\n\r\n  const [ showIntro, setShowIntro ] = useState( true );\r\n  const [ mountIntro, setMountIntro ] = useState( true )\r\n  \r\n  useEffect( () => {\r\n    setTimeout( () => setShowIntro( false ), 2500 );\r\n    setTimeout( () => setMountIntro( false ), 4000 );\r\n  } );\r\n\r\n  //----------HOME TITILE HANDLER----------//\r\n\r\n  const [ width, setWidth ] = useState( window.innerWidth );\r\n  \r\n  useEffect( () => {\r\n    const updateWidth = () => {\r\n      setWidth( window.innerWidth );\r\n    };\r\n    window.addEventListener( 'resize', updateWidth );\r\n    return () => window.removeEventListener( 'resize', updateWidth );\r\n  } );\r\n\r\n  //----------APP STATE----------//\r\n\r\n  const state = {\r\n    style: {\r\n      homeTitle: {\r\n        fontSize: Math.floor( 0.08 * width )\r\n      },\r\n      menuLines: {\r\n        backgroundColor: menuLinesBackground\r\n      },\r\n      menuLink: {\r\n        fontSize: ( width >= 1200 ) ? Math.floor( 0.06 * width ) : null\r\n      },\r\n      menuLabel: {\r\n        color: menuLinesBackground\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  //----------JSX CODE----------//\r\n\r\n\r\n  return (\r\n    <Router basename='/'>\r\n      <Container fluid={ true } className=\"app\">\r\n\r\n        {/* ----------MENU BUTTON---------- */}\r\n\r\n        <Button\r\n          className=\"menuIcon\"\r\n          variant=\"outline-dark\"\r\n          onClick={ handleMenuButtonClick }\r\n        >\r\n\r\n          {\r\n            ( width >= 992 )\r\n              ? <p className=\"menuIcon__label\" style={ state.style.menuLabel }>Menu</p>\r\n              : null\r\n          }\r\n\r\n          <span className=\"topLine\" style={ state.style.menuLines } />\r\n          <span className=\"middleLine\" style={ state.style.menuLines } />\r\n          <span className=\"bottomLine\" style={ state.style.menuLines } />\r\n        </Button>\r\n\r\n\r\n        {/* ----------MENU---------- */}\r\n\r\n\r\n        {\r\n          menuIsOpen && (\r\n            <CSSTransition\r\n              in={ menuButtonIsClicked }\r\n              unmountOnExit={ true }\r\n              timeout={ 1700 }\r\n            >\r\n            <div className=\"menu\">\r\n\r\n              {/* ----------MENU STRIPS---------- */}\r\n\r\n              <CSSTransition\r\n                in={ menuButtonIsClicked }\r\n                appear={ true }\r\n                unmountOnExit={ true }\r\n                timeout={ {\r\n                  enter: 600,\r\n                  appear: 600,\r\n                  exit: 1100\r\n                } }\r\n                classNames=\"menuStripOne\"\r\n              >\r\n                <div className=\"menuStrip menuStripOne\" />\r\n              </CSSTransition>\r\n              <CSSTransition\r\n                in={ menuButtonIsClicked }\r\n                appear={ true }\r\n                unmountOnExit={ true }\r\n                timeout={ {\r\n                  enter: 800,\r\n                  appear: 800,\r\n                  exit: 1300\r\n                } }\r\n                classNames=\"menuStripTwo\"\r\n              >\r\n                <div className=\"menuStrip menuStripTwo\">\r\n                  <div className=\"verticalLineMenu\" />\r\n\r\n                  {/* ----------MENU LINKS---------- */}\r\n                  \r\n                  <div className=\"linksWrapper\">\r\n\r\n                    <div className=\"linkWrapper homeWrapper\">\r\n                      <CSSTransition\r\n                        in={ menuButtonIsClicked }\r\n                        appear={ true }\r\n                        unmountOnExit={ true }\r\n                        timeout={ 500 }\r\n                        classNames=\"menuLinkHome\"\r\n                      >\r\n                        <Link to=\"/\">\r\n                          <h1\r\n                            onClick={ handleMenuButtonClick }\r\n                            className=\"menuLink menuLinkHome\"\r\n                            style={ state.style.menuLink }\r\n                          >Home</h1>\r\n                        </Link>\r\n                      </CSSTransition>\r\n                    </div>\r\n                    \r\n                    <div className=\"linkWrapper aboutWrapper\">\r\n                      <CSSTransition\r\n                        in={ menuButtonIsClicked }\r\n                        appear={ true }\r\n                        unmountOnExit={ true }\r\n                        timeout={ 600 }\r\n                        classNames=\"menuLinkAbout\"\r\n                      >\r\n                        <Link to=\"/about\">\r\n                          <h1\r\n                            onClick={ handleMenuButtonClick }\r\n                            className=\"menuLink menuLinkAbout\"\r\n                            style={ state.style.menuLink }  \r\n                          >About</h1>\r\n                        </Link>\r\n                      </CSSTransition>  \r\n                    </div>\r\n\r\n                    <div className=\"linkWrapper galleryWrapper\">\r\n                      <CSSTransition\r\n                        in={ menuButtonIsClicked }\r\n                        appear={ true }\r\n                        unmountOnExit={ true }\r\n                        timeout={ 700 }\r\n                        classNames=\"menuLinkGallery\"\r\n                      >\r\n                        <Link to=\"/gallery\">\r\n                          <h1\r\n                            onClick={ handleMenuButtonClick }\r\n                            className=\"menuLink menuLinkGallery\"\r\n                            style={ state.style.menuLink }\r\n                          >Gallery</h1>\r\n                        </Link>\r\n                      </CSSTransition>  \r\n                    </div>\r\n\r\n                    <div className=\"linkWrapper contactWrapper\">\r\n                      <CSSTransition\r\n                        in={ menuButtonIsClicked }\r\n                        appear={ true }\r\n                        unmountOnExit={ true }\r\n                        timeout={ 800 }\r\n                        classNames=\"menuLinkContact\"\r\n                      >\r\n                        <Link to=\"/contact\">\r\n                          <h1\r\n                            onClick={ handleMenuButtonClick }\r\n                            className=\"menuLink menuLinkContact\"\r\n                            style={ state.style.menuLink }\r\n                          >Contact</h1>\r\n                        </Link>\r\n                      </CSSTransition>  \r\n                    </div>\r\n                    \r\n                    <div className=\"linkWrapper blogWrapper\">\r\n                      <CSSTransition\r\n                        in={ menuButtonIsClicked }\r\n                        appear={ true }\r\n                        unmountOnExit={ true }\r\n                        timeout={ 900 }\r\n                        classNames=\"menuLinkBlog\"\r\n                      >\r\n                        <Link to=\"/blog\">\r\n                          <h1\r\n                            onClick={ handleMenuButtonClick }\r\n                            className=\"menuLink menuLinkBlog\"\r\n                            style={ state.style.menuLink }\r\n                          >Blog</h1>\r\n                        </Link>\r\n                      </CSSTransition> \r\n                    </div>\r\n                    \r\n                  </div>\r\n\r\n                </div>\r\n              </CSSTransition>\r\n              <CSSTransition\r\n                in={ menuButtonIsClicked }\r\n                appear={ true }\r\n                unmountOnExit={ true }\r\n                timeout={ {\r\n                  enter: 1000,\r\n                  appear: 1000,\r\n                  exit: 1500\r\n                } }\r\n                classNames=\"menuStripThree\"\r\n              >\r\n                <div className=\"menuStrip menuStripThree\" />\r\n              </CSSTransition>\r\n              <CSSTransition\r\n                in={ menuButtonIsClicked }\r\n                appear={ true }\r\n                unmountOnExit={ true }\r\n                timeout={ {\r\n                  enter: 1200,\r\n                  appear: 1200,\r\n                  exit: 1700\r\n                } }\r\n                classNames=\"menuStripFour\"\r\n              >\r\n                <div className=\"menuStrip menuStripFour\">\r\n                <div className=\"verticalLineMenu\" />\r\n                </div>\r\n              </CSSTransition>\r\n              \r\n            </div>\r\n            </CSSTransition>\r\n          )\r\n        }\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {\r\n              mountIntro && ( <Intro showIntro={ showIntro } clientWidth={ width } /> )\r\n            }\r\n            <Home clientWidth={ width } />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/gallery\">\r\n            <Gallery />\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <Contact />\r\n          </Route>\r\n          <Route path=\"/blog\">\r\n            <Blog />\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}