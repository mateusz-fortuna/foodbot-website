{"version":3,"sources":["assets/images/food-printer-w-background.jpg","assets/images/printer-perspective.png","components/Intro/index.js","components/Transition/index.js","components/TransitionOut/index.js","assets/js/throttle.js","assets/js/lerp.js","assets/js/map.js","components/Cursor/index.js","components/Home/index.js","components/Circle/index.js","components/About/index.js","components/Gallery/index.js","components/Contact/index.js","components/Blog/index.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Index","props","state","style","introTitle","fontSize","Math","floor","clientWidth","introSubtitle","Row","className","Col","CSSTransition","in","showIntro","timeout","classNames","appear","Transition","useState","autoUnmount","setAutoUnmount","listenerTimeout","useEffect","setTimeout","clearTimeout","items","i","push","mountTransition","unmountOnExit","key","xs","transitionDelay","TransitionOut","setMountTransition","stripes","throttle","fn","wait","time","Date","now","lerp","a","b","n","map","value","inMin","inMax","outMin","outMax","Cursor","smallCursor","React","createRef","canvas","initCursor","bind","initCanvas","initHovers","isStuck","isNoisy","showCursor","test","reference","flat","Infinity","linkItems","this","clientX","clientY","lastX","lastY","canvasCursorSpeed","cursorHandler","event","group","position","paper","Point","canvasCursorSpeedTimeout","setState","document","addEventListener","animationFrame","requestAnimationFrame","render","TweenMax","set","current","x","y","shapeBounds","setup","polygon","Path","RegularPolygon","strokeColor","strokeWidth","smooth","Group","applyMatrix","noiseObjects","segments","SimplexNoise","bigCoordinates","smallCursorBgColor","view","onFrame","type","color","window","innerHeight","innerWidth","backgroundColor","console","error","stuckX","stuckY","bounds","width","scale","forEach","segment","index","point","length","noiseX","noise2D","count","noiseY","distortionX","distortionY","newX","newY","handleMouseEnter","navItemBox","currentTarget","getBoundingClientRect","round","left","top","height","handleMouseLeave","itemListenersDelay","item","undefined","removeEventListener","cancelAnimationFrame","ref","data-paper-resize","nextProp","Component","Home","learnMoreRef","useRef","descriptionFontSize","linkFontSize","homeImage","backgroundImage","PrinterImage","homeTitle","homeDescription","link","changeUrl","setChangeUrl","timeoutNextPage","handleLearnMore","handleWheelEvent","menuTest","deltaY","touchStart","handleTouchStart","touches","pageY","handleTouchEndEvent","touchEnd","changedTouches","homeImageWrapperRef","homeContentRef","homeRef","title","passive","isAnimationDone","display","zIndex","pointerEvents","removeAttribute","to","concat","lg","href","onClick","preventDefault","Button","variant","Circle","About","changeNextUrl","setChangeNextUrl","changePrevUrl","setChangePrevUrl","timeoutPrevPage","timeoutNextPageFn","timeoutPrevPageFn","circlesName","name","circles","circlesRef","id","clientHeight","maxWidth","maxHeight","transform","Image","Gallery","Contact","Blog","App","menuButtonColorChange","urlArray","location","split","urlEnd","menuLines","querySelectorAll","menuLabel","querySelector","menuButtonIsClicked","menuIsOpen","setMenuIsOpen","setMenuButtonIsClicked","animationDone","setAnimationDone","menuLinesBackground","handleMenuButtonClick","setShowIntro","mountIntro","setMountIntro","setWidth","setHeight","updateWidth","exitMenuUsingEsc","menuLink","menuButtonRef","basename","Container","fluid","onExit","enter","exit","onEntered","exact","path","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be2d80d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/food-printer-w-background.f00a6669.jpg\";","module.exports = __webpack_public_path__ + \"static/media/printer-perspective.5413edfd.png\";","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './index.sass';\r\n\r\nconst Index = props => {\r\n  const state = {\r\n    style: {\r\n      introTitle: {\r\n        fontSize: Math.floor( 0.08 * props.clientWidth )\r\n      },\r\n      introSubtitle: {\r\n        fontSize: Math.floor( 0.03 * props.clientWidth )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Col className=\"h-100 p-0\">\r\n        <div className=\"intro d-flex justify-content-center align-items-center\">\r\n          <div className=\"stripContainer\">\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1000 }\r\n              classNames=\"stripOne\"\r\n            >\r\n              <div className=\"strip stripOne\" />\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1200 }\r\n              classNames=\"stripTwo\"\r\n            >\r\n              <div className=\"strip stripTwo\" />\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1300 }\r\n              classNames=\"stripThree\"\r\n            >\r\n              <div className=\"strip stripThree\" />\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1400 }\r\n              classNames=\"stripFour\"\r\n            >\r\n              <div className=\"strip stripFour\" />\r\n            </CSSTransition>\r\n          </div>\r\n          <div className=\"introTextWrapper text-center\">\r\n            <div className=\"introTitleWrapper\">\r\n              <CSSTransition\r\n                in={ props.showIntro }\r\n                timeout={ 1000 }\r\n                classNames=\"introTitle\"\r\n                appear={ true }\r\n              >\r\n                <h1 className=\"introTitle\" style={ state.style.introTitle }>FoodBot</h1>\r\n              </CSSTransition>\r\n            </div>\r\n            <div className=\"introSubtitleWrapper\">\r\n            <CSSTransition\r\n                in={ props.showIntro }\r\n                timeout={ 2000 }\r\n                classNames=\"introSubtitle\"\r\n                appear={ true }\r\n              >\r\n                <p className=\"introSubtitle\" style={ state.style.introSubtitle }>Create your own dream dessert</p>  \r\n              </CSSTransition>\r\n            </div> \r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Index;","import React,{ useState, useEffect } from 'react';\r\nimport './index.sass';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst Transition = props => {\r\n\r\n  //----------ANIMATION PARAMETERS----------//\r\n\r\n  const timeout = 1000; //single strip transition time\r\n  const delay = 100;\r\n\r\n  //----------AUTO UNMOUNT----------//\r\n\r\n  const [ autoUnmount, setAutoUnmount ] = useState( false );\r\n\r\n  let listenerTimeout = null;\r\n  const timeoutFn = () => {\r\n    listenerTimeout = setTimeout( () => { setAutoUnmount( true ); }, 1300 );\r\n    listenerTimeout = null;\r\n  };\r\n\r\n  useEffect( () => {\r\n    timeoutFn();\r\n\r\n    return () => {\r\n      clearTimeout( listenerTimeout );\r\n    };\r\n  } );\r\n\r\n  //----------ARRAY OF STRIPS----------//\r\n\r\n  const items = [];\r\n    \r\n  for ( let i = 1; i < 4; i++ ) {\r\n    items.push (\r\n      <CSSTransition\r\n        in={ props.mountTransition && !autoUnmount }\r\n        appear={ true }\r\n        unmountOnExit={ true }\r\n        timeout={ timeout + ( i * delay ) }\r\n        classNames=\"transition__strip\"\r\n        key={ i }\r\n      >\r\n        <Col\r\n          xs=\"3\"\r\n          className=\"transition__strip\"\r\n          style={ { transitionDelay: i * delay +'ms' } }\r\n        />\r\n      </CSSTransition>\r\n    );\r\n  }\r\n\r\n\r\n  //----------JSX CODE----------//\r\n\r\n\r\n  return (\r\n    <CSSTransition\r\n        in={ props.mountTransition && !autoUnmount }\r\n        appear={ true }\r\n        unmountOnExit={ true }\r\n        timeout={ timeout + 300 }\r\n        classNames=\"transition__strip\"\r\n        key=\"0\"\r\n    >\r\n      <Row className=\"transition\">\r\n        <Col\r\n          xs=\"3\"\r\n          className=\"transition__strip\"\r\n        />\r\n        { items }\r\n      </Row>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Transition;","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './index.sass';\r\n\r\nconst TransitionOut = () => {\r\n\r\n  const [ mountTransition, setMountTransition ] = useState( true );\r\n\r\n  let timeout = null\r\n  const timeoutFn = () => {\r\n    timeout = setTimeout( () => {\r\n      setMountTransition( false );\r\n    }, 1300 );\r\n    timeout = null;\r\n  };\r\n\r\n  useEffect( () => {\r\n    timeoutFn();\r\n\r\n    return () => {\r\n      clearTimeout( timeout );\r\n    };\r\n  } );\r\n\r\n  const stripes = [];\r\n\r\n  //push 4 stripes into array\r\n  for ( let i = 0; i < 4; i++ ) {\r\n    stripes.push( \r\n      <CSSTransition\r\n      in={ true }\r\n      appear={ true }\r\n      timeout={ 1000 + 100 * i }\r\n      classNames=\"transitionOut__strip\"\r\n      style={ { transitionDelay: 100 * i +'ms' } }\r\n      key={ i }\r\n      >\r\n        <Col xs=\"3\" className=\"transitionOut__strip\" />\r\n      </CSSTransition>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={ mountTransition }\r\n      unmountOnExit={ true }\r\n      timeout={ 0 }\r\n    >\r\n      <Row className=\"transitionOut\">\r\n        { stripes }\r\n      </Row>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default TransitionOut;","export const throttle = ( fn, wait ) => {\r\n  let time = Date.now();\r\n\r\n  return ( ...args ) => {\r\n    if ( ( time + wait - Date.now() ) < 0 ) {\r\n      fn( ...args );\r\n      time = Date.now();\r\n    }\r\n  };\r\n};","export const lerp = ( a, b, n ) => {\r\n  return ( 1 - n ) * a + n * b;\r\n};","export const map = ( value, inMin, inMax, outMin, outMax ) => {\r\n  return (\r\n    ( ( value - inMin ) * ( outMax - outMin ) ) / ( inMax - inMin ) + outMin\r\n  );\r\n};","import React, { Component } from 'react';\r\nimport './index.sass';\r\n\r\nimport TweenMax from 'gsap';\r\nimport paper from 'paper';\r\nimport SimplexNoise from 'simplex-noise';\r\n\r\nimport { lerp } from '../../assets/js/lerp';\r\nimport { map } from '../../assets/js/map';\r\n\r\nexport class Cursor extends Component {\r\n  constructor( props ) {\r\n    super( props );\r\n\r\n    this.smallCursor = React.createRef();\r\n    this.canvas = React.createRef();\r\n\r\n    this.initCursor = this.initCursor.bind( this );\r\n    this.initCanvas = this.initCanvas.bind( this );\r\n    this.initHovers = this.initHovers.bind( this );\r\n\r\n    this.state = {\r\n      isStuck: false,\r\n      isNoisy: false,\r\n      showCursor: false,\r\n      test: [ this.props.reference ].flat( Infinity )\r\n    }\r\n\r\n    this.linkItems = this.state.test;\r\n  };\r\n\r\n  initCursor() {\r\n    this.clientX = -100;\r\n    this.clientY = -100;\r\n    this.lastX = 0;\r\n    this.lastY = 0;\r\n    this.canvasCursorSpeed = 1;\r\n\r\n    this.cursorHandler = event => {\r\n      this.group.position = new paper.Point(\r\n        event.clientX,\r\n        event.clientY\r\n      );\r\n      this.canvasCursorSpeedTimeout = setTimeout( () => {\r\n        this.canvasCursorSpeed = 0.2;\r\n      }, 100 );\r\n      this.setState( {\r\n        showCursor: true\r\n      } );\r\n\r\n      this.clientX = event.clientX;\r\n      this.clientY = event.clientY;\r\n\r\n      \r\n    };\r\n\r\n    document.addEventListener( 'mousemove', this.cursorHandler );\r\n\r\n    const render = () => {\r\n      TweenMax.set( this.smallCursor.current, {\r\n        x: this.clientX,\r\n        y: this.clientY\r\n      } );\r\n      this.animationFrame = requestAnimationFrame( render );\r\n    };\r\n    this.animationFrame = requestAnimationFrame( render );\r\n  }\r\n\r\n  initCanvas() {\r\n    const shapeBounds = {\r\n      width: 125,\r\n      height: 125\r\n    };\r\n    paper.setup( this.canvas.current );\r\n\r\n    let strokeColor = 'rgba( 14, 14, 14, 0.5 )';\r\n    const strokeWidth = 1;\r\n    const segments = 8;\r\n    const radius = 15;\r\n    const noiseScale = 150; // speed\r\n    const noiseRange = 4;\r\n\r\n\r\n    const polygon = new paper.Path.RegularPolygon(\r\n      new paper.Point( 0, 0 ),\r\n      segments,\r\n      radius\r\n    );\r\n    polygon.strokeColor = strokeColor;\r\n    polygon.strokeWidth = strokeWidth;\r\n    polygon.smooth();\r\n\r\n    this.group = new paper.Group( [ polygon ] );\r\n    this.group.applyMatrix = false;\r\n\r\n    const noiseObjects = polygon.segments.map(\r\n      () => new SimplexNoise()\r\n    );\r\n    let bigCoordinates = [];\r\n\r\n    const smallCursorBgColor = this.smallCursor.current;\r\n\r\n    paper.view.onFrame = event => {\r\n    \r\n      // dynamic color change\r\n      const { type, color } = this.props;\r\n\r\n      if ( type === 'variable' ) {\r\n        if ( this.clientY < window.innerHeight /2 && window.innerWidth < 992 ) {\r\n          polygon.strokeColor = 'rgba( 224, 244, 244, 0.5 )';\r\n          smallCursorBgColor.style.backgroundColor = '#e0e0e0';\r\n        } else if ( this.clientY > window.innerHeight /2 && window.innerWidth < 992 ) {\r\n          polygon.strokeColor = 'rgba( 14, 14, 14, 0.5 )';\r\n          smallCursorBgColor.style.backgroundColor = '#0e0e0e';\r\n        } else if ( this.clientX < window.innerWidth / 2 ) {\r\n          polygon.strokeColor = 'rgba( 224, 244, 244, 0.5 )';\r\n          smallCursorBgColor.style.backgroundColor = '#e0e0e0';\r\n        } else {\r\n          polygon.strokeColor = 'rgba( 14, 14, 14, 0.5 )';\r\n          smallCursorBgColor.style.backgroundColor = '#0e0e0e';\r\n        }\r\n      } else if ( type === 'solid' && color === 'light' ) {\r\n        polygon.strokeColor = 'rgba( 224, 244, 244, 0.5 )';\r\n        smallCursorBgColor.style.backgroundColor = '#e0e0e0';\r\n      } else if ( type === 'solid' && color === 'dark' ) {\r\n        polygon.strokeColor = 'rgba( 14, 14, 14, 0.5 )';\r\n        smallCursorBgColor.style.backgroundColor = '#0e0e0e';\r\n      } else {\r\n        console.error( 'Set type and color property for the interactive cursor component.' );\r\n      }\r\n\r\n      const { isStuck } = this.state;\r\n      const { isNoisy } = this.state;\r\n\r\n      // normal behavior\r\n      if ( !isStuck ) {\r\n       this.lastX = lerp( this.lastX, this.clientX, this.canvasCursorSpeed );\r\n       this.lastY = lerp( this.lastY, this.clientY, this.canvasCursorSpeed );\r\n       this.group.position = new paper.Point( this.lastX, this.lastY );\r\n      }\r\n      // stuck behavior\r\n      else if ( isStuck ) {\r\n       this.lastX = lerp( this.lastX, this.stuckX, this.canvasCursorSpeed );\r\n       this.lastY = lerp( this.lastY, this.stuckY, this.canvasCursorSpeed );\r\n       this.group.position = new paper.Point( this.lastX, this.lastY );\r\n      }\r\n\r\n      if ( isStuck && polygon.bounds.width < shapeBounds.width ) {\r\n        // scale up the shape\r\n        polygon.scale( 1.08 );\r\n      } else if ( !isStuck && polygon.bounds.width > 30 ) {\r\n        // remove noise\r\n        if ( isNoisy ) {\r\n          polygon.segments.forEach( ( segment, index ) => {\r\n            segment.point.set(\r\n              bigCoordinates[ index ][ 0 ],\r\n              bigCoordinates[ index ][ 1 ]\r\n            );\r\n          } );\r\n          this.setState( { isNoisy: false } );\r\n          bigCoordinates = [];\r\n        }\r\n\r\n        // scale down the shape\r\n        polygon.scale( 0.92 );\r\n      }\r\n\r\n      // while stuck do noise\r\n      if ( isStuck && polygon.bounds.width >= shapeBounds.width ) {\r\n        this.setState( { isNoisy: true } );\r\n\r\n        // get the coordinates of canvas circle\r\n        if ( bigCoordinates.length === 0 ) {\r\n          polygon.segments.forEach( ( segment, index ) => {\r\n            bigCoordinates[ index ] = [ segment.point.x, segment.point.y ];\r\n          } );\r\n        }\r\n\r\n        // calculate noise value for each point at that frame\r\n        polygon.segments.forEach( ( segment, index ) => {\r\n          const noiseX = noiseObjects[ index ].noise2D( event.count / noiseScale, 0 );\r\n          const noiseY = noiseObjects[ index ].noise2D( event.count / noiseScale, 1 );\r\n\r\n          const distortionX = map( noiseX, -1, 1, -noiseRange, noiseRange );\r\n          const distortionY = map( noiseY, -1, 1, -noiseRange, noiseRange );\r\n\r\n          const newX = bigCoordinates[ index ][ 0 ] + distortionX;\r\n          const newY = bigCoordinates[ index ][ 1 ] + distortionY;\r\n\r\n          segment.point.set( newX, newY );\r\n        } );\r\n\r\n        polygon.smooth();\r\n      }\r\n    };\r\n  } \r\n\r\n  initHovers() {\r\n    this.handleMouseEnter = event => {\r\n      const navItem = event.currentTarget;\r\n      const navItemBox = navItem.getBoundingClientRect();\r\n      this.stuckX = Math.round( navItemBox.left + navItemBox.width / 2 );\r\n      this.stuckY = Math.round( navItemBox.top + navItemBox.height / 2 );\r\n      this.setState( { isStuck: true } );\r\n    };\r\n\r\n    this.handleMouseLeave = () => {\r\n      this.setState( { isStuck: false } );\r\n    };\r\n\r\n    this.itemListenersDelay = setTimeout( () => {\r\n      this.linkItems.forEach( item => {\r\n        item.current.addEventListener( 'mouseenter', this.handleMouseEnter );\r\n        item.current.addEventListener( 'mouseleave', this.handleMouseLeave );\r\n      } );\r\n     }, 1000 );\r\n  }\r\n\r\n  static getDerivedStateFromProps( nextProp ) {\r\n    return {\r\n      test: nextProp\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initCursor();\r\n    this.initCanvas();\r\n    if ( this.props.reference.flat( Infinity )[ 0 ] === undefined ) {\r\n      return;\r\n    } else { this.initHovers(); this.setState( { test: this.props.reference } ) }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout( this.itemListenersDelay );\r\n    clearTimeout( this.canvasCursorSpeedTimeout );\r\n    if ( this.props.reference.flat( Infinity )[ 0 ] === undefined ) {\r\n      return;\r\n    } else {\r\n      this.linkItems.forEach( item => {\r\n        item.current.removeEventListener( 'mouseenter', this.handleMouseEnter,  );\r\n        item.current.removeEventListener( 'mouseleave', this.handleMouseLeave );\r\n      } );\r\n    }   \r\n    document.removeEventListener( 'mousemove', this.cursorHandler );\r\n    cancelAnimationFrame( this.animationFrame );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"cursorContainer--outer\">\r\n        <div className=\"cursorContainer--inner\">\r\n          <div\r\n            ref={ this.smallCursor }\r\n            className=\"cursor cursor--small\"\r\n          />\r\n\r\n          <canvas\r\n            ref={ this.canvas }\r\n            className=\"cursor cursor--canvas\"\r\n            data-paper-resize\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cursor;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport './index.sass';\r\nimport PrinterImage from '../../assets/images/food-printer-w-background.jpg';\r\nimport Transition from '../Transition';\r\nimport TransitionOut from '../TransitionOut';\r\nimport { throttle } from '../../assets/js/throttle';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Cursor from '../Cursor';\r\n\r\nconst Home = props => {\r\n\r\n  const learnMoreRef = useRef();\r\n\r\n  //----------STATE STYLES----------//\r\n\r\n  const descriptionFontSize = ( props.clientWidth >= 1200 )\r\n    ? Math.floor( 0.018 * props.clientWidth )\r\n    : null;\r\n\r\n  const linkFontSize = ( props.clientWidth >= 1200 )\r\n    ? Math.floor( 0.018 * props.clientWidth * 0.72 )\r\n    : null;\r\n\r\n  const state = {\r\n    style: {\r\n      homeImage: {\r\n        backgroundImage: `url( ${ PrinterImage } )`\r\n      },\r\n      homeTitle: {\r\n        fontSize: Math.floor( 0.08 * props.clientWidth )\r\n      },\r\n      homeDescription: {\r\n        fontSize: descriptionFontSize\r\n      },\r\n      link: {\r\n        fontSize: linkFontSize\r\n      }\r\n    }\r\n  }\r\n\r\n//----------MOUNT TRANSITION HANDLER----------//\r\n\r\n const [ mountTransition, setMountTransition ] = useState( false );\r\n const [ changeUrl, setChangeUrl ] = useState( false );\r\n\r\n //----------LEARN MORE HANDLER----------//\r\n\r\n let timeoutNextPage = null;\r\n const timeoutNextPageFn = () => {\r\n  timeoutNextPage = setTimeout( () => { setChangeUrl( !changeUrl ); }, 1300 );\r\n  timeoutNextPage = null;\r\n };\r\n\r\n const handleLearnMore = () => {\r\n  setMountTransition( !mountTransition );\r\n  timeoutNextPageFn();\r\n };\r\n \r\n //----------MOUNT ABOUT ON SCROLL----------//\r\n \r\n const handleWheel = event => {\r\n  if ( props.menuTest ) {\r\n    return;\r\n  } else {\r\n    if ( event.deltaY > 1 ) {\r\n      handleLearnMore();\r\n     }\r\n  }\r\n };\r\n\r\n const handleWheelEvent = throttle( handleWheel, 1300 );\r\n\r\n\r\n let touchStart = 0;\r\n\r\n const handleTouchStart = event => {\r\n  touchStart = event.touches[ 0 ].pageY;\r\n };\r\n\r\n const handleTouchEnd = event => {\r\n   const touchEnd = event.changedTouches[ 0 ].pageY;\r\n   if ( props.menuTest ) {\r\n    return;\r\n   } else {\r\n    if ( touchStart > touchEnd ) {\r\n      handleLearnMore();\r\n    } else {\r\n     touchStart = 0;\r\n    }\r\n   }\r\n };\r\n\r\n const handleTouchEndEvent = throttle( handleTouchEnd, 1300 );\r\n\r\n const homeImageWrapperRef = useRef();\r\n const homeContentRef = useRef();\r\n const homeRef = useRef();\r\n \r\n\r\n useEffect( () => {\r\n  //----------PAGE TITLE----------//\r\n\r\n  document.title = 'FoodBot | Innovative 3D printer for food.';\r\n\r\n  //----------EVENT LISTENERS----------//\r\n\r\n  window.addEventListener( 'wheel', handleWheelEvent, false );\r\n  window.addEventListener( 'touchstart', handleTouchStart, { passive: true } );\r\n  window.addEventListener( 'touchend', handleTouchEndEvent, false );\r\n\r\n  // Fix the cursor when menu is open\r\n\r\n  if ( props.isAnimationDone ) {\r\n    homeImageWrapperRef.current.style.display = 'none';\r\n    homeContentRef.current.style.display = 'none';\r\n    homeRef.current.style.zIndex = '5';\r\n    homeRef.current.style.pointerEvents = 'none';\r\n  }\r\n  else {\r\n    homeImageWrapperRef.current.removeAttribute('style');\r\n    homeContentRef.current.removeAttribute('style');\r\n    homeRef.current.removeAttribute('style');\r\n  }\r\n\r\n  return () => {\r\n    clearTimeout( timeoutNextPage );\r\n\r\n    window.removeEventListener( 'wheel', handleWheelEvent, false );\r\n    window.removeEventListener( 'touchstart', handleTouchStart, { passive: true } );\r\n    window.removeEventListener( 'touchend', handleTouchEndEvent, false );\r\n  };\r\n} );\r\n\r\n\r\n\r\n  //----------JSX CODE----------//\r\n\r\n  return (\r\n    <Row className=\"home\" ref={ homeRef }>\r\n    <TransitionOut />\r\n    { mountTransition && ( <Transition mountTransition={ mountTransition } /> ) }\r\n    { changeUrl && ( <Redirect to=\"/about\" /> ) }\r\n\r\n      {/*----------INTERACTIVE CURSOR----------*/}\r\n\r\n      <Cursor\r\n        reference={ props.reference.concat( [ learnMoreRef ] ) }\r\n        type={ props.isAnimationDone ? 'solid' : 'variable' }\r\n        color={ props.isAnimationDone ? 'light' : null }\r\n      />\r\n\r\n      {/* ----------PRINTER COLUMN--------- */}\r\n\r\n\r\n      <Col lg=\"6\" className=\"homeImageWrapper p-0\" ref={ homeImageWrapperRef }>\r\n        <div className=\"homeImage\" style={ state.style.homeImage }/>\r\n      </Col>\r\n\r\n\r\n      {/* ----------CONTENT COLUMN---------- */}\r\n\r\n\r\n      <Col lg=\"6\" className=\"homeContent p-0\" ref={ homeContentRef }>\r\n\r\n        {/* ----------THIN LINES---------- */}\r\n\r\n        <div className=\"linesContainer\">\r\n          <div className=\"verticalLine\" />\r\n          <div className=\"horizontalLine\" />\r\n        </div>\r\n\r\n        {/* ----------CONTENT TEXT---------- */}\r\n\r\n        <div className=\"homeDescription\" style={ state.style.homeDescription }>\r\n          <span className=\"d-block\">FoodBot 3D printer</span>\r\n          <span className=\"d-block\">is an equipment which</span>\r\n          <span className=\"d-block\">can make food quickly.</span>\r\n          <span className=\"d-block\">It allow you to create</span>\r\n          <span className=\"d-block\">your own dream dessert.</span>\r\n          <br />\r\n\r\n          <a\r\n            className=\"learnMore\"\r\n            href=\"/about\"\r\n            onClick={ event => { event.preventDefault(); } }\r\n            ref={ learnMoreRef }\r\n          >\r\n            { props.clientWidth < 1200 && (\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline-dark\"\r\n                  className=\"learnMoreButton link\"\r\n                  style={ state.style.link }\r\n                  onClick={ handleLearnMore }\r\n                >Learn more</Button>\r\n              )\r\n            }\r\n            {\r\n              props.clientWidth >= 1200 && (\r\n                <div>\r\n                  <p\r\n                    className=\"link\"\r\n                    style={ state.style.link }\r\n                    onClick={ handleLearnMore }\r\n                  >Learn more</p>\r\n                  <span className=\"underline\" />\r\n                </div>  \r\n              )\r\n            }\r\n          </a> \r\n        </div>\r\n    \r\n        <h1 className=\"homeTitle\" style={ state.style.homeTitle }>FoodBot</h1>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './index.sass';\r\n\r\nconst Circle = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={ true }\r\n      appear={ true }\r\n      unmountOnExit={ true }\r\n      classNames=\"circle\"\r\n      timeout={ 500 }\r\n    >\r\n      <div className=\"circle\"/>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Circle;","import React, { useState, useEffect, useRef, createRef } from 'react';\r\nimport './index.sass';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Transition from '../Transition';\r\nimport Circle from '../Circle';\r\nimport Cursor from '../Cursor';\r\n\r\nimport Image from '../../assets/images/printer-perspective.png';\r\n\r\nimport { throttle } from '../../assets/js/throttle';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst About = props => {\r\n  //----------SCROLL & SWIPE NAVIGATION----------//\r\n  \r\n  const [ mountTransition, setMountTransition ] = useState( false );\r\n  const [ changeNextUrl, setChangeNextUrl ] = useState( false );\r\n  const [ changePrevUrl, setChangePrevUrl ] = useState( false );\r\n\r\n\r\n  let timeoutNextPage = null;\r\n  let timeoutPrevPage = null;\r\n  const timeoutNextPageFn = () => {\r\n    timeoutNextPage = setTimeout( () => { setChangeNextUrl( !changeNextUrl ); }, 1300 );\r\n    timeoutNextPage = null;\r\n  };\r\n  const timeoutPrevPageFn = () => {\r\n    timeoutPrevPage = setTimeout( () => { setChangePrevUrl( !changePrevUrl ); }, 1300 );\r\n    timeoutPrevPage = null;\r\n  };\r\n\r\n  const handleWheel = event => {\r\n    if ( event.deltaY > 0 ) {\r\n      setMountTransition( !mountTransition );\r\n      timeoutNextPageFn();   \r\n    } else {\r\n      setMountTransition( !mountTransition );\r\n      timeoutPrevPageFn();\r\n    }\r\n  };\r\n\r\n  const handleWheelEvent = throttle( handleWheel, 1300 );\r\n\r\n  let touchStart = 0;\r\n\r\n  const handleTouchStart = event => {\r\n    touchStart = event.touches[ 0 ].pageY;\r\n  };\r\n\r\n  const handleTouchEnd = event => {\r\n    const touchEnd = event.changedTouches[ 0 ].pageY;\r\n    \r\n    if ( touchStart > touchEnd ) {\r\n      setMountTransition( !mountTransition );\r\n      timeoutNextPageFn();\r\n    } else {\r\n      setMountTransition( !mountTransition );\r\n      timeoutPrevPageFn();\r\n    }\r\n  };\r\n\r\n  const handleTouchEndEvent = throttle( handleTouchEnd, 1300 );\r\n\r\n  useEffect( () => {\r\n    //----------PAGE TITLE----------//\r\n\r\n    document.title = 'About | FoodBot';\r\n\r\n    //----------EVENT LISTENERS----------//\r\n\r\n    window.addEventListener( 'wheel', handleWheelEvent, false );\r\n    window.addEventListener( 'touchstart', handleTouchStart, { passive: true } );\r\n    window.addEventListener( 'touchend', handleTouchEndEvent, false );\r\n  \r\n    return () => {\r\n      clearTimeout( timeoutNextPage );\r\n      clearTimeout( timeoutPrevPage );\r\n\r\n      window.removeEventListener( 'wheel', handleWheelEvent, false );\r\n      window.removeEventListener( 'touchstart', handleTouchStart, { passive: true } );\r\n      window.removeEventListener( 'touchend', handleTouchEndEvent, false );\r\n    };\r\n  } );\r\n  //----------ANIMATION SETTINGS----------//\r\n\r\n  const timeout = 1000;\r\n\r\n  //----------DYNAMICALLY GENERATED CONTENT----------//\r\n\r\n  const circlesName = [\r\n    { name: 'basis', left: 32, top: 69 },\r\n    { name: 'head', left: 48, top: 60 },\r\n    { name: 'fence', left: 38, top: 40 },\r\n    { name: 'logo', left: 53, top: 27 },\r\n    { name: 'screen', left: 80, top: 28 }\r\n  ];\r\n  let circles = [];\r\n  let circlesRef = useRef( circlesName.map( () => createRef() ) ); \r\n\r\n  const circlesGenerator = () => {\r\n    circlesName.map( ( item, index ) => circles.push(\r\n        <div\r\n          ref={ circlesRef.current[ index ] }\r\n          key={ index }\r\n          id={ item.name }\r\n          className=\"circleWrapper\"\r\n          style={ {\r\n            left: `${ circlesName[ index ].left }%`,\r\n            top: `${ circlesName[ index ].top }%`\r\n          } }\r\n        > \r\n            <Circle/>\r\n        </div>\r\n    ) );\r\n  };\r\n\r\n  circlesGenerator();\r\n\r\n  //----------JSX CODE----------//\r\n\r\n  return (\r\n    <Row className=\"about\">\r\n      { mountTransition && ( <Transition mountTransition={ mountTransition }/> ) }\r\n\r\n      { changeNextUrl && ( <Redirect to=\"/gallery\" /> ) }\r\n      { changePrevUrl && ( <Redirect to=\"/\" /> ) }\r\n\r\n      {/*----------INTERACTIVE CURSOR----------*/}\r\n\r\n      <Cursor reference={ props.reference.concat( circlesRef.current ) } type=\"solid\" color=\"light\" />\r\n      \r\n      {/*----------COLUMNS WITH CONTENT----------*/}\r\n\r\n      <Row className=\"stripContainer\">\r\n        <Col className=\"stripContainer__strip\">\r\n          <div\r\n            className=\"stripContainer__strip__inner\"\r\n            style={ {\r\n              width: props.clientHeight,\r\n              height: props.clientHeight\r\n            } }\r\n          >  \r\n            <div\r\n              style={ { \r\n                width: props.clientWidth * 0.9,\r\n                maxWidth: '857px',\r\n                height: props.clientHeight * 0.9,\r\n                maxHeight: props.clientWidth < 768 ? '550px' : 'unset',\r\n                top: '50%',\r\n                left: '50%',\r\n                transform: 'translate(-50%,-50%)',\r\n                position: 'absolute'\r\n               } }\r\n            >\r\n              { circles }\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/*----------PRINTER IMAGE----------*/}\r\n      \r\n      <CSSTransition\r\n        in={ true }\r\n        appear={ true }\r\n        unmountOnExit={ true }\r\n        classNames=\"printerImage\"\r\n        timeout={ timeout }\r\n      >\r\n        <div className=\"printerImage\" style={ { backgroundImage: `url( ${ Image } )` } }/>\r\n      </CSSTransition>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default About;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport Transition from '../Transition';\r\nimport { throttle } from '../../assets/js/throttle';\r\nimport TransitionOut from '../TransitionOut';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Gallery = () => {\r\n  //----------SCROLL & SWIPE NAVIGATION----------//\r\n  \r\n  const [ mountTransition, setMountTransition ] = useState( false );\r\n  const [ changeNextUrl, setChangeNextUrl ] = useState( false );\r\n  const [ changePrevUrl, setChangePrevUrl ] = useState( false );\r\n\r\n\r\n  let timeoutNextPage = null;\r\n  let timeoutPrevPage = null;\r\n  const timeoutNextPageFn = () => {\r\n    timeoutNextPage = setTimeout( () => { setChangeNextUrl( !changeNextUrl ); }, 1300 );\r\n    timeoutNextPage = null;\r\n  };\r\n  const timeoutPrevPageFn = () => {\r\n    timeoutPrevPage = setTimeout( () => { setChangePrevUrl( !changePrevUrl ); }, 1300 );\r\n    timeoutPrevPage = null;\r\n  };\r\n\r\n  const handleWheel = event => {\r\n    if ( event.deltaY > 0 ) {\r\n      setMountTransition( !mountTransition );\r\n      timeoutNextPageFn();   \r\n    } else {\r\n      setMountTransition( !mountTransition );\r\n      timeoutPrevPageFn();\r\n    }\r\n  };\r\n\r\n  const handleWheelEvent = throttle( handleWheel, 1300 );\r\n\r\n  let touchStart = 0;\r\n\r\n  const handleTouchStart = event => {\r\n    touchStart = event.touches[ 0 ].pageY;\r\n  };\r\n\r\n  const handleTouchEnd = event => {\r\n    const touchEnd = event.changedTouches[ 0 ].pageY;\r\n    \r\n    if ( touchStart > touchEnd ) {\r\n      setMountTransition( !mountTransition );\r\n      timeoutNextPageFn();\r\n    } else {\r\n      setMountTransition( !mountTransition );\r\n      timeoutPrevPageFn();\r\n    }\r\n  };\r\n\r\n  const handleTouchEndEvent = throttle( handleTouchEnd, 1300 );\r\n\r\n  useEffect( () => {\r\n    //----------PAGE TITLE----------//\r\n\r\n    document.title = 'Gallery | FoodBot';\r\n\r\n    //----------EVENT LISTENERS----------//\r\n\r\n    window.addEventListener( 'wheel', handleWheelEvent, false );\r\n    window.addEventListener( 'touchstart', handleTouchStart, { passive: true } );\r\n    window.addEventListener( 'touchend', handleTouchEndEvent, false );\r\n  \r\n    return () => {\r\n      clearTimeout( timeoutNextPage );\r\n      clearTimeout( timeoutPrevPage );\r\n\r\n      window.removeEventListener( 'wheel', handleWheelEvent, false );\r\n      window.removeEventListener( 'touchstart', handleTouchStart, { passive: true } );\r\n      window.removeEventListener( 'touchend', handleTouchEndEvent, false );\r\n    };\r\n  } );\r\n\r\n  return (\r\n    <Row className=\"gallery\">\r\n      <TransitionOut />\r\n      { mountTransition && ( <Transition mountTransition={ mountTransition }/> ) }\r\n\r\n      { changeNextUrl && ( <Redirect to=\"/contact\" /> ) }\r\n      { changePrevUrl && ( <Redirect to=\"/about\" /> ) }\r\n\r\n      Gallery\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport { throttle } from '../../assets/js/throttle';\r\nimport Transition from '../Transition';\r\nimport TransitionOut from '../TransitionOut';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Contact = () => {\r\n  //----------SCROLL & SWIPE NAVIGATION----------//\r\n  \r\n  const [ mountTransition, setMountTransition ] = useState( false );\r\n  const [ changeNextUrl, setChangeNextUrl ] = useState( false );\r\n  const [ changePrevUrl, setChangePrevUrl ] = useState( false );\r\n\r\n  let timeoutNextPage = null;\r\n  let timeoutPrevPage = null;\r\n  const timeoutNextPageFn = () => {\r\n    timeoutNextPage = setTimeout( () => { setChangeNextUrl( !changeNextUrl ); }, 1300 );\r\n    timeoutNextPage = null;\r\n  };\r\n  const timeoutPrevPageFn = () => {\r\n    timeoutPrevPage = setTimeout( () => { setChangePrevUrl( !changePrevUrl ); }, 1300 );\r\n    timeoutPrevPage = null;\r\n  };\r\n\r\n  const handleWheel = event => {\r\n    if ( event.deltaY > 0 ) {\r\n      setMountTransition( !mountTransition );\r\n      timeoutNextPageFn();   \r\n    } else {\r\n      setMountTransition( !mountTransition );\r\n      timeoutPrevPageFn();\r\n    }\r\n  };\r\n\r\n  const handleWheelEvent = throttle( handleWheel, 1300 );\r\n\r\n  let touchStart = 0;\r\n\r\n  const handleTouchStart = event => {\r\n    touchStart = event.touches[ 0 ].pageY;\r\n  };\r\n\r\n  const handleTouchEnd = event => {\r\n    const touchEnd = event.changedTouches[ 0 ].pageY;\r\n    \r\n    if ( touchStart > touchEnd ) {\r\n      setMountTransition( !mountTransition );\r\n      timeoutNextPageFn();\r\n    } else {\r\n      setMountTransition( !mountTransition );\r\n      timeoutPrevPageFn();\r\n    }\r\n  };\r\n\r\n  const handleTouchEndEvent = throttle( handleTouchEnd, 1300 );\r\n\r\n  useEffect( () => {\r\n    //----------PAGE TITLE----------//\r\n\r\n    document.title = 'Contact | FoodBot';\r\n\r\n    //----------EVENT LISTENERS----------//\r\n\r\n    window.addEventListener( 'wheel', handleWheelEvent, false );\r\n    window.addEventListener( 'touchstart', handleTouchStart, { passive: true } );\r\n    window.addEventListener( 'touchend', handleTouchEndEvent, false );\r\n  \r\n    return () => {\r\n      clearTimeout( timeoutNextPage );\r\n      clearTimeout( timeoutPrevPage );\r\n\r\n      window.removeEventListener( 'wheel', handleWheelEvent, false );\r\n      window.removeEventListener( 'touchstart', handleTouchStart, { passive: true } );\r\n      window.removeEventListener( 'touchend', handleTouchEndEvent, false );\r\n    };\r\n  } );\r\n\r\n  return (\r\n    <Row className=\"contact\">\r\n      <TransitionOut />\r\n      { mountTransition && ( <Transition mountTransition={ mountTransition }/> ) }\r\n      { changeNextUrl && ( <Redirect to=\"/blog\" /> ) }\r\n      { changePrevUrl && ( <Redirect to=\"/gallery\" /> ) }\r\n      Contact\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Contact;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport { throttle } from '../../assets/js/throttle';\r\nimport Transition from '../Transition';\r\nimport TransitionOut from '../TransitionOut';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nconst Blog = () => {\r\n  //----------SCROLL & SWIPE NAVIGATION----------//\r\n  \r\n  const [ mountTransition, setMountTransition ] = useState( false );\r\n  const [ changeUrl, setChangeUrl ] = useState( false );\r\n\r\n  let timeoutPrevPage = null;\r\n  const timeoutPrevPageFn = () => {\r\n    timeoutPrevPage = setTimeout( () => { setChangeUrl( !changeUrl ); }, 1300 );\r\n    timeoutPrevPage = null;\r\n  };\r\n\r\n  const handleWheel = event => {\r\n    if ( event.deltaY < 0 ) {\r\n      setMountTransition( !mountTransition );\r\n      timeoutPrevPageFn();   \r\n    }\r\n  };\r\n\r\n  const handleWheelEvent = throttle( handleWheel, 1300 );\r\n\r\n  let touchStart = 0;\r\n\r\n  const handleTouchStart = event => {\r\n    touchStart = event.touches[ 0 ].pageY;\r\n  };\r\n\r\n  const handleTouchEnd = event => {\r\n    const touchEnd = event.changedTouches[ 0 ].pageY;\r\n    \r\n    if ( touchStart < touchEnd ) {\r\n      setMountTransition( !mountTransition );\r\n      timeoutPrevPageFn();\r\n    }\r\n  };\r\n\r\n  const handleTouchEndEvent = throttle( handleTouchEnd, 1300 );\r\n\r\n  useEffect( () => {\r\n    //----------PAGE TITLE----------//\r\n\r\n    document.title = 'Blog | FoodBot';\r\n\r\n    //----------EVENT LISTENERS----------//\r\n\r\n    window.addEventListener( 'wheel', handleWheelEvent, false );\r\n    window.addEventListener( 'touchstart', handleTouchStart, { passive: true } );\r\n    window.addEventListener( 'touchend', handleTouchEndEvent, false );\r\n  \r\n    return () => {\r\n      clearTimeout( timeoutPrevPage );\r\n\r\n      window.removeEventListener( 'wheel', handleWheelEvent, false );\r\n      window.removeEventListener( 'touchstart', handleTouchStart, { passive: true } );\r\n      window.removeEventListener( 'touchend', handleTouchEndEvent, false );\r\n    };\r\n  } );\r\n\r\n  return (\r\n    <Row className=\"blog\">\r\n      <TransitionOut />\r\n      { mountTransition && ( <Transition mountTransition={ mountTransition }/> ) }\r\n      { changeUrl && ( <Redirect to=\"/contact\" /> ) }\r\n\r\n      Blog\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Blog;","import React, { useState, useEffect, useRef } from 'react';\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport './App.sass';\r\n\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Intro from './Intro';\r\nimport Home from './Home';\r\nimport About from './About';\r\nimport Gallery from './Gallery';\r\nimport Contact from './Contact';\r\nimport Blog from './Blog';\r\n\r\n\r\nconst App = () => {\r\n\r\n  //----------MENU BUTTON COLOR----------//\r\n\r\n  useEffect( () => {\r\n    //----------PAGE TITLE----------//\r\n\r\n    document.title = 'FoodBot | Innovative 3D printer for food.';\r\n\r\n    //----------MENU BUTTON COLOR FUNCTION----------//\r\n\r\n    const menuButtonColorChange = () => {    \r\n      const urlArray = document.location.href.split( '/' );\r\n      const urlEnd = urlArray[ urlArray.length - 1 ];\r\n\r\n      const menuLines = document.querySelectorAll( '.menuLine' );\r\n      const menuLabel = document.querySelector( '.menuIcon__label' );\r\n\r\n      switch ( urlEnd ) {\r\n        case 'about':\r\n          menuLines.forEach(\r\n            item => item.style.backgroundColor = '#e0e0e0'\r\n          );\r\n          if ( menuLabel ) {\r\n            menuLabel.style.color = '#e0e0e0';\r\n          }\r\n          break;\r\n      \r\n        default:\r\n          if ( menuButtonIsClicked ) {\r\n            menuLines.forEach(\r\n              item => item.style.backgroundColor = '#e0e0e0'\r\n            );\r\n            if ( menuLabel ) {\r\n              menuLabel.style.color = '#e0e0e0';\r\n            }\r\n          } else {\r\n            menuLines.forEach(\r\n              item => item.style.backgroundColor = '#0e0e0e'\r\n            );\r\n            if ( menuLabel ) {\r\n              menuLabel.style.color = '#0e0e0e';\r\n            }\r\n          }\r\n      }\r\n    }\r\n\r\n    //----------SET MENU COLOR ON PAGE LOAD----------//\r\n\r\n    menuButtonColorChange();\r\n\r\n    //----------SET MENU COLOR ON HASH CHANGE----------//\r\n\r\n    window.addEventListener( 'hashchange', menuButtonColorChange );\r\n\r\n    return () => {\r\n      window.removeEventListener( 'hashchange', menuButtonColorChange );\r\n    }\r\n  } );\r\n\r\n  //----------MENU BUTTON HANDLER----------//\r\n  const [ menuIsOpen, setMenuIsOpen ] = useState( false );\r\n  const [ menuButtonIsClicked, setMenuButtonIsClicked ] = useState( false );\r\n  const [ animationDone, setAnimationDone ] = useState( false );\r\n\r\n    \r\n  const menuLinesBackground = menuButtonIsClicked ? '#e0e0e0' : null;\r\n  \r\n  const handleMenuButtonClick = event => {\r\n    setMenuButtonIsClicked( !menuButtonIsClicked );\r\n    setMenuIsOpen( true );\r\n  };\r\n\r\n  //----------INTRO HANDLERS----------//\r\n\r\n  const [ showIntro, setShowIntro ] = useState( true );\r\n  const [ mountIntro, setMountIntro ] = useState( true )\r\n  \r\n  useEffect( () => {\r\n    setTimeout( () => setShowIntro( false ), 2500 );\r\n    setTimeout( () => setMountIntro( false ), 4000 );\r\n\r\n    return () => {\r\n      clearTimeout( setTimeout( () => setShowIntro( false ), 2500 ) );\r\n      clearTimeout( setTimeout( () => setMountIntro( false ), 4000 ) );\r\n    };\r\n  } );\r\n\r\n  //----------HOME TITILE HANDLER----------//\r\n\r\n  const [ width, setWidth ] = useState( window.innerWidth );\r\n  const [ height, setHeight ] = useState( window.innerHeight );\r\n  \r\n  useEffect( () => {\r\n    const updateWidth = () => {\r\n      setWidth( window.innerWidth );\r\n      setHeight( window.innerHeight );\r\n    };\r\n    window.addEventListener( 'resize', updateWidth );\r\n\r\n    document.addEventListener( 'keyup', exitMenuUsingEsc );\r\n\r\n    return () => {\r\n      window.removeEventListener( 'resize', updateWidth );\r\n      document.removeEventListener( 'keyup', exitMenuUsingEsc );\r\n    };\r\n  } );\r\n\r\n  //----------APP STATE----------//\r\n\r\n  const state = {\r\n    style: {\r\n      homeTitle: {\r\n        fontSize: Math.floor( 0.08 * width )\r\n      },\r\n      menuLines: {\r\n        backgroundColor: menuLinesBackground\r\n      },\r\n      menuLink: {\r\n        fontSize: ( width >= 1200 ) ? Math.floor( 0.06 * width ) : null\r\n      },\r\n      menuLabel: {\r\n        color: menuLinesBackground\r\n      }\r\n    }\r\n  }\r\n\r\n  //----------REFERENCE FOR CURSOR----------//\r\n\r\n  const menuButtonRef = useRef();\r\n  \r\n  //----------EXIT MENU USING ESC KEY----------//\r\n\r\n  const exitMenuUsingEsc = event => {\r\n    if ( menuButtonIsClicked ) {\r\n      if ( event.key === 'Escape' ) handleMenuButtonClick();\r\n    }\r\n  };\r\n\r\n  //----------JSX CODE----------//\r\n\r\n\r\n  return (\r\n    <Router basename='/'>\r\n      <Container fluid={ true } className=\"app\">\r\n       \r\n        {/* ----------MENU BUTTON---------- */}\r\n\r\n        <Button\r\n          className=\"menuIcon\"\r\n          variant=\"outline-dark\"\r\n          onClick={ handleMenuButtonClick }\r\n          ref={ menuButtonRef }\r\n        >\r\n\r\n          {\r\n            ( width >= 992 )\r\n              ? <p className=\"menuIcon__label\" style={ state.style.menuLabel }>Menu</p>\r\n              : null\r\n          }\r\n\r\n          <span className=\"menuLine topLine\" style={ state.style.menuLines } />\r\n          <span className=\"menuLine middleLine\" style={ state.style.menuLines } />\r\n          <span className=\"menuLine bottomLine\" style={ state.style.menuLines } />\r\n        </Button>\r\n\r\n\r\n        {/* ----------MENU---------- */}\r\n\r\n\r\n        {\r\n          menuIsOpen && (\r\n            <CSSTransition\r\n              in={ menuButtonIsClicked }\r\n              unmountOnExit={ true }\r\n              timeout={ 1700 }\r\n              onExit={ () => {\r\n                setAnimationDone( !animationDone );\r\n              } }\r\n            >\r\n            <div className=\"menu\">\r\n\r\n              {/* ----------MENU STRIPS---------- */}\r\n\r\n              <CSSTransition\r\n                in={ menuButtonIsClicked }\r\n                appear={ true }\r\n                unmountOnExit={ true }\r\n                timeout={ {\r\n                  enter: 600,\r\n                  appear: 600,\r\n                  exit: 1100\r\n                } }\r\n                classNames=\"menuStripOne\"\r\n              >\r\n                <div className=\"menuStrip menuStripOne\" />\r\n              </CSSTransition>\r\n              <CSSTransition\r\n                in={ menuButtonIsClicked }\r\n                appear={ true }\r\n                unmountOnExit={ true }\r\n                timeout={ {\r\n                  enter: 800,\r\n                  appear: 800,\r\n                  exit: 1300,\r\n                } }\r\n                classNames=\"menuStripTwo\"\r\n                onEntered={ () => {\r\n                  setAnimationDone( !animationDone );\r\n                } }\r\n              >\r\n                <div className=\"menuStrip menuStripTwo\">\r\n                  <div className=\"verticalLineMenu\" />\r\n\r\n                  {/* ----------MENU LINKS---------- */}\r\n                  \r\n                  <div className=\"linksWrapper\">\r\n\r\n                    <div className=\"linkWrapper homeWrapper\">\r\n                      <CSSTransition\r\n                        in={ menuButtonIsClicked }\r\n                        appear={ true }\r\n                        unmountOnExit={ true }\r\n                        timeout={ 500 }\r\n                        classNames=\"menuLinkHome\"\r\n                      >\r\n                        <Link to=\"/\">\r\n                          <h1\r\n                            onClick={ handleMenuButtonClick }\r\n                            className=\"menuLink menuLinkHome\"\r\n                            style={ state.style.menuLink }\r\n                          >Home</h1>\r\n                        </Link>\r\n                      </CSSTransition>\r\n                    </div>\r\n                    \r\n                    <div className=\"linkWrapper aboutWrapper\">\r\n                      <CSSTransition\r\n                        in={ menuButtonIsClicked }\r\n                        appear={ true }\r\n                        unmountOnExit={ true }\r\n                        timeout={ 600 }\r\n                        classNames=\"menuLinkAbout\"\r\n                      >\r\n                        <Link to=\"/about\">\r\n                          <h1\r\n                            onClick={ handleMenuButtonClick }\r\n                            className=\"menuLink menuLinkAbout\"\r\n                            style={ state.style.menuLink }\r\n                          >About</h1>\r\n                        </Link>\r\n                      </CSSTransition>  \r\n                    </div>\r\n\r\n                    <div className=\"linkWrapper galleryWrapper\">\r\n                      <CSSTransition\r\n                        in={ menuButtonIsClicked }\r\n                        appear={ true }\r\n                        unmountOnExit={ true }\r\n                        timeout={ 700 }\r\n                        classNames=\"menuLinkGallery\"\r\n                      >\r\n                        <Link to=\"/gallery\">\r\n                          <h1\r\n                            onClick={ handleMenuButtonClick }\r\n                            className=\"menuLink menuLinkGallery\"\r\n                            style={ state.style.menuLink }\r\n                          >Gallery</h1>\r\n                        </Link>\r\n                      </CSSTransition>  \r\n                    </div>\r\n\r\n                    <div className=\"linkWrapper contactWrapper\">\r\n                      <CSSTransition\r\n                        in={ menuButtonIsClicked }\r\n                        appear={ true }\r\n                        unmountOnExit={ true }\r\n                        timeout={ 800 }\r\n                        classNames=\"menuLinkContact\"\r\n                      >\r\n                        <Link to=\"/contact\">\r\n                          <h1\r\n                            onClick={ handleMenuButtonClick }\r\n                            className=\"menuLink menuLinkContact\"\r\n                            style={ state.style.menuLink }\r\n                          >Contact</h1>\r\n                        </Link>\r\n                      </CSSTransition>  \r\n                    </div>\r\n                    \r\n                    <div className=\"linkWrapper blogWrapper\">\r\n                      <CSSTransition\r\n                        in={ menuButtonIsClicked }\r\n                        appear={ true }\r\n                        unmountOnExit={ true }\r\n                        timeout={ 900 }\r\n                        classNames=\"menuLinkBlog\"\r\n                      >\r\n                        <Link to=\"/blog\">\r\n                          <h1\r\n                            onClick={ handleMenuButtonClick }\r\n                            className=\"menuLink menuLinkBlog\"\r\n                            style={ state.style.menuLink }\r\n                          >Blog</h1>\r\n                        </Link>\r\n                      </CSSTransition> \r\n                    </div>\r\n                    \r\n                  </div>\r\n\r\n                </div>\r\n              </CSSTransition>\r\n              <CSSTransition\r\n                in={ menuButtonIsClicked }\r\n                appear={ true }\r\n                unmountOnExit={ true }\r\n                timeout={ {\r\n                  enter: 1000,\r\n                  appear: 1000,\r\n                  exit: 1500\r\n                } }\r\n                classNames=\"menuStripThree\"\r\n              >\r\n                <div className=\"menuStrip menuStripThree\" />\r\n              </CSSTransition>\r\n              <CSSTransition\r\n                in={ menuButtonIsClicked }\r\n                appear={ true }\r\n                unmountOnExit={ true }\r\n                timeout={ {\r\n                  enter: 1200,\r\n                  appear: 1200,\r\n                  exit: 1700\r\n                } }\r\n                classNames=\"menuStripFour\"\r\n              >\r\n                <div className=\"menuStrip menuStripFour\">\r\n                <div className=\"verticalLineMenu\" />\r\n                </div>\r\n              </CSSTransition>\r\n              \r\n            </div>\r\n            </CSSTransition>\r\n          )\r\n        }\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {\r\n              mountIntro && ( <Intro showIntro={ showIntro } clientWidth={ width } /> )\r\n            }\r\n            <Home\r\n              clientWidth={ width }\r\n              reference={ [ menuButtonRef ] }\r\n              isAnimationDone={ animationDone }\r\n              menuTest={ menuButtonIsClicked }\r\n            />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About\r\n              clientWidth={ width }\r\n              clientHeight={ height }\r\n              reference={ [ menuButtonRef ] }\r\n              isAnimationDone={ animationDone }\r\n            />\r\n          </Route>\r\n          <Route path=\"/gallery\">\r\n            <Gallery reference={ menuButtonRef } />\r\n          </Route>\r\n          <Route path=\"/contact\">\r\n            <Contact reference={ menuButtonRef } />\r\n          </Route>\r\n          <Route path=\"/blog\">\r\n            <Blog reference={ menuButtonRef } />\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}