{"version":3,"sources":["assets/images/food-printer-w-background.jpg","components/Intro/index.js","components/Home/index.js","components/About/index.js","components/Gallery/index.js","components/Contact/index.js","components/Blog/index.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Index","props","state","style","introTitle","fontSize","Math","floor","clientWidth","introSubtitle","Row","className","Col","CSSTransition","in","showIntro","timeout","classNames","appear","Home","descriptionFontSize","linkFontSize","homeImage","backgroundImage","PrinterImage","homeTitle","homeDescription","link","lg","to","Button","type","variant","About","Gallery","Contact","Blog","App","useState","menuIsOpen","setMenuIsOpen","menuButtonIsClicked","setMenuButtonIsClicked","menuLinesBackground","handleMenuButtonClick","setShowIntro","mountIntro","setMountIntro","useEffect","setTimeout","window","innerWidth","width","setWidth","updateWidth","addEventListener","removeEventListener","menuLines","backgroundColor","menuLink","basename","Container","fluid","onClick","unmountOnExit","enter","exit","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7242221f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/food-printer-w-background.f00a6669.jpg\";","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport './index.sass';\r\n\r\nconst Index = props => {\r\n  const state = {\r\n    style: {\r\n      introTitle: {\r\n        fontSize: Math.floor( 0.08 * props.clientWidth )\r\n      },\r\n      introSubtitle: {\r\n        fontSize: Math.floor( 0.03 * props.clientWidth )\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row className=\"h-100\">\r\n      <Col className=\"h-100 p-0\">\r\n        <div className=\"intro d-flex justify-content-center align-items-center\">\r\n          <div className=\"stripContainer\">\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1000 }\r\n              classNames=\"stripOne\"\r\n            >\r\n              <div className=\"strip stripOne\" />\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1200 }\r\n              classNames=\"stripTwo\"\r\n            >\r\n              <div className=\"strip stripTwo\" />\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1300 }\r\n              classNames=\"stripThree\"\r\n            >\r\n              <div className=\"strip stripThree\" />\r\n            </CSSTransition>\r\n            <CSSTransition\r\n              in={ props.showIntro }\r\n              timeout={ 1400 }\r\n              classNames=\"stripFour\"\r\n            >\r\n              <div className=\"strip stripFour\" />\r\n            </CSSTransition>\r\n          </div>\r\n          <div className=\"introTextWrapper text-center\">\r\n            <div className=\"introTitleWrapper\">\r\n              <CSSTransition\r\n                in={ props.showIntro }\r\n                timeout={ 1000 }\r\n                classNames=\"introTitle\"\r\n                appear={ true }\r\n              >\r\n                <h1 className=\"introTitle\" style={ state.style.introTitle }>FoodBot</h1>\r\n              </CSSTransition>\r\n            </div>\r\n            <div className=\"introSubtitleWrapper\">\r\n            <CSSTransition\r\n                in={ props.showIntro }\r\n                timeout={ 2000 }\r\n                classNames=\"introSubtitle\"\r\n                appear={ true }\r\n              >\r\n                <p className=\"introSubtitle\" style={ state.style.introSubtitle }>Create your own dream dessert</p>  \r\n              </CSSTransition>\r\n            </div> \r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Index;","import React from 'react';\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.sass';\r\nimport PrinterImage from '../../assets/images/food-printer-w-background.jpg';\r\n\r\nconst Home = props => {\r\n\r\n  //----------STATE STYLES----------//\r\n\r\n  const descriptionFontSize = ( props.clientWidth >= 1200 )\r\n    ? Math.floor( 0.018 * props.clientWidth )\r\n    : null;\r\n\r\n  const linkFontSize = ( props.clientWidth >= 1200 )\r\n    ? Math.floor( 0.018 * props.clientWidth * 0.72 )\r\n    : null;\r\n\r\n  const state = {\r\n    style: {\r\n      homeImage: {\r\n        backgroundImage: `url( ${ PrinterImage } )`\r\n      },\r\n      homeTitle: {\r\n        fontSize: Math.floor( 0.08 * props.clientWidth )\r\n      },\r\n      homeDescription: {\r\n        fontSize: descriptionFontSize\r\n      },\r\n      link: {\r\n        fontSize: linkFontSize\r\n      }\r\n    }\r\n  }\r\n\r\n  //----------JSX CODE----------//\r\n\r\n  return (\r\n    <Row className=\"home\">\r\n\r\n      {/* ----------PRINTER COLUMN--------- */}\r\n\r\n\r\n      <Col lg=\"6\" className=\"homeImageWrapper p-0\">\r\n        <div className=\"homeImage\" style={ state.style.homeImage }/>\r\n      </Col>\r\n\r\n\r\n      {/* ----------CONTENT COLUMN---------- */}\r\n\r\n\r\n      <Col lg=\"6\" className=\"homeContent p-0\">\r\n\r\n        {/* ----------THIN LINES---------- */}\r\n\r\n        <div className=\"linesContainer\">\r\n          <div className=\"verticalLine\" />\r\n          <div className=\"horizontalLine\" />\r\n        </div>\r\n\r\n        {/* ----------CONTENT TEXT---------- */}\r\n\r\n        <div className=\"homeDescription\" style={ state.style.homeDescription }>\r\n          <span className=\"d-block\">FoodBot 3D printer</span>\r\n          <span className=\"d-block\">is an equipment which</span>\r\n          <span className=\"d-block\">can make food quickly.</span>\r\n          <span className=\"d-block\">It allow you to create</span>\r\n          <span className=\"d-block\">your own dream dessert.</span>\r\n          <br />\r\n          <Link to=\"/about\">\r\n            { props.clientWidth < 1200 && (\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"outline-dark\"\r\n                  className=\"learnMoreButton link\"\r\n                  style={ state.style.link }\r\n                >Learn more</Button>\r\n              )\r\n            }\r\n            {\r\n              props.clientWidth >= 1200 && (\r\n                <div>\r\n                  <p className=\"link\" style={ state.style.link }>Learn more</p>\r\n                  <span className=\"underline\" />\r\n                </div>  \r\n              )\r\n            }\r\n          </Link> \r\n        </div>\r\n    \r\n        <h1 className=\"homeTitle\" style={ state.style.homeTitle }>FoodBot</h1>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      About\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\n\r\nconst Gallery = () => {\r\n  return (\r\n    <div>\r\n      Gallery\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;","import React from 'react';\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      Contact\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nconst Blog = () => {\r\n  return (\r\n    <div>\r\n      Blog\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Blog;","import React, { useState, useEffect } from 'react';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport './App.sass';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\n\nimport { Container, Button } from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\nimport Intro from './Intro';\nimport Home from './Home';\nimport About from './About';\nimport Gallery from './Gallery';\nimport Contact from './Contact';\nimport Blog from './Blog';\n\n\nconst App = () => {\n\n  //----------MENU BUTTON HANDLER----------//\n  const [ menuIsOpen, setMenuIsOpen ] = useState( false );\n  const [ menuButtonIsClicked, setMenuButtonIsClicked ] = useState( false );\n  const menuLinesBackground = menuButtonIsClicked ? '#e0e0e0' : null;\n\n  const handleMenuButtonClick = () => {\n    setMenuButtonIsClicked( !menuButtonIsClicked );\n    setMenuIsOpen( true )\n  };\n\n  //----------INTRO HANDLERS----------//\n\n  const [ showIntro, setShowIntro ] = useState( true );\n  const [ mountIntro, setMountIntro ] = useState( true )\n  \n  useEffect( () => {\n    setTimeout( () => setShowIntro( false ), 2500 );\n    setTimeout( () => setMountIntro( false ), 4000 );\n  } );\n\n  //----------HOME TITILE HANDLER----------//\n\n  const [ width, setWidth ] = useState( window.innerWidth );\n  \n  useEffect( () => {\n    const updateWidth = () => {\n      setWidth( window.innerWidth );\n    };\n    window.addEventListener( 'resize', updateWidth );\n    return () => window.removeEventListener( 'resize', updateWidth );\n  } );\n\n  //----------APP STATE----------//\n\n  const state = {\n    style: {\n      homeTitle: {\n        fontSize: Math.floor( 0.08 * width )\n      },\n      menuLines: {\n        backgroundColor: menuLinesBackground\n      },\n      menuLink: {\n        fontSize: ( width >= 1200 ) ? Math.floor( 0.06 * width ) : null\n      }\n    }\n  }\n\n\n  //----------JSX CODE----------//\n\n\n  return (\n    <Router basename='/'>\n      <Container fluid={ true } className=\"app\">\n\n        {/* ----------MENU BUTTON---------- */}\n\n        <Button\n          className=\"menuIcon\"\n          variant=\"outline-dark\"\n          onClick={ handleMenuButtonClick }\n        >\n          <span className=\"topLine\" style={ state.style.menuLines } />\n          <span className=\"middleLine\" style={ state.style.menuLines } />\n          <span className=\"bottomLine\" style={ state.style.menuLines } />\n        </Button>\n\n\n        {/* ----------MENU---------- */}\n\n\n        {\n          menuIsOpen && (\n            <CSSTransition\n              in={ menuButtonIsClicked }\n              unmountOnExit={ true }\n              timeout={ 1700 }\n            >\n            <div className=\"menu\">\n\n              {/* ----------MENU STRIPS---------- */}\n\n              <CSSTransition\n                in={ menuButtonIsClicked }\n                appear={ true }\n                unmountOnExit={ true }\n                timeout={ {\n                  enter: 600,\n                  appear: 600,\n                  exit: 1100\n                } }\n                classNames=\"menuStripOne\"\n              >\n                <div className=\"menuStrip menuStripOne\" />\n              </CSSTransition>\n              <CSSTransition\n                in={ menuButtonIsClicked }\n                appear={ true }\n                unmountOnExit={ true }\n                timeout={ {\n                  enter: 800,\n                  appear: 800,\n                  exit: 1300\n                } }\n                classNames=\"menuStripTwo\"\n              >\n                <div className=\"menuStrip menuStripTwo\">\n                  <div className=\"verticalLineMenu\" />\n\n                  {/* ----------MENU LINKS---------- */}\n                  \n                  <div className=\"linksWrapper\">\n\n                    <div className=\"linkWrapper homeWrapper\">\n                      <CSSTransition\n                        in={ menuButtonIsClicked }\n                        appear={ true }\n                        unmountOnExit={ true }\n                        timeout={ 500 }\n                        classNames=\"menuLinkHome\"\n                      >\n                        <Link to=\"/\">\n                          <h1\n                            onClick={ handleMenuButtonClick }\n                            className=\"menuLink menuLinkHome\"\n                            style={ state.style.menuLink }\n                          >Home</h1>\n                        </Link>\n                      </CSSTransition>\n                    </div>\n                    \n                    <div className=\"linkWrapper aboutWrapper\">\n                      <CSSTransition\n                        in={ menuButtonIsClicked }\n                        appear={ true }\n                        unmountOnExit={ true }\n                        timeout={ 600 }\n                        classNames=\"menuLinkAbout\"\n                      >\n                        <Link to=\"/about\">\n                          <h1\n                            onClick={ handleMenuButtonClick }\n                            className=\"menuLink menuLinkAbout\"\n                            style={ state.style.menuLink }  \n                          >About</h1>\n                        </Link>\n                      </CSSTransition>  \n                    </div>\n\n                    <div className=\"linkWrapper galleryWrapper\">\n                      <CSSTransition\n                        in={ menuButtonIsClicked }\n                        appear={ true }\n                        unmountOnExit={ true }\n                        timeout={ 700 }\n                        classNames=\"menuLinkGallery\"\n                      >\n                        <Link to=\"/gallery\">\n                          <h1\n                            onClick={ handleMenuButtonClick }\n                            className=\"menuLink menuLinkGallery\"\n                            style={ state.style.menuLink }\n                          >Gallery</h1>\n                        </Link>\n                      </CSSTransition>  \n                    </div>\n\n                    <div className=\"linkWrapper contactWrapper\">\n                      <CSSTransition\n                        in={ menuButtonIsClicked }\n                        appear={ true }\n                        unmountOnExit={ true }\n                        timeout={ 800 }\n                        classNames=\"menuLinkContact\"\n                      >\n                        <Link to=\"/contact\">\n                          <h1\n                            onClick={ handleMenuButtonClick }\n                            className=\"menuLink menuLinkContact\"\n                            style={ state.style.menuLink }\n                          >Contact</h1>\n                        </Link>\n                      </CSSTransition>  \n                    </div>\n                    \n                    <div className=\"linkWrapper blogWrapper\">\n                      <CSSTransition\n                        in={ menuButtonIsClicked }\n                        appear={ true }\n                        unmountOnExit={ true }\n                        timeout={ 900 }\n                        classNames=\"menuLinkBlog\"\n                      >\n                        <Link to=\"/blog\">\n                          <h1\n                            onClick={ handleMenuButtonClick }\n                            className=\"menuLink menuLinkBlog\"\n                            style={ state.style.menuLink }\n                          >Blog</h1>\n                        </Link>\n                      </CSSTransition> \n                    </div>\n                    \n                  </div>\n\n                </div>\n              </CSSTransition>\n              <CSSTransition\n                in={ menuButtonIsClicked }\n                appear={ true }\n                unmountOnExit={ true }\n                timeout={ {\n                  enter: 1000,\n                  appear: 1000,\n                  exit: 1500\n                } }\n                classNames=\"menuStripThree\"\n              >\n                <div className=\"menuStrip menuStripThree\" />\n              </CSSTransition>\n              <CSSTransition\n                in={ menuButtonIsClicked }\n                appear={ true }\n                unmountOnExit={ true }\n                timeout={ {\n                  enter: 1200,\n                  appear: 1200,\n                  exit: 1700\n                } }\n                classNames=\"menuStripFour\"\n              >\n                <div className=\"menuStrip menuStripFour\">\n                <div className=\"verticalLineMenu\" />\n                </div>\n              </CSSTransition>\n              \n            </div>\n            </CSSTransition>\n          )\n        }\n\n        <Switch>\n          <Route exact path=\"/\">\n            {\n              mountIntro && ( <Intro showIntro={ showIntro } clientWidth={ width } /> )\n            }\n            <Home clientWidth={ width } />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/gallery\">\n            <Gallery />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/blog\">\n            <Blog />\n          </Route>\n        </Switch>\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}